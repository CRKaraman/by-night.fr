imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: mapping_assets.yml, ignore_errors: true }
    - { resource: sem_var.yml, ignore_errors: true }

framework:
    esi: { enabled: true }
    translator:
        fallback:   "%locale%"
        logging:    false
    secret:         "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
    assets:
        base_urls: ['http://static.%base_host%']
        packages:
            asset:
                base_urls: ['http://static.%base_host%']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    session:
        handler_id: session.handler.native_file
        save_path: "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       { path: /_fragment }
    http_method_override: true
    
doctrine_cache:
    custom_providers:
        location:
            prototype:  "app.location_cache_provider"
    providers:
        memcache:
            type: redis
            namespace: memory_cache_ns
            aliases:
                - memory_cache
        location_cache:
            name: location_cache
            location: ~
            namespace: location_cache_ns
        array:
            type: array
            namespace: array_cache_ns
            aliases:
                - array_cache
        comparator:
            type: array
            namespace: comparator_cache_ns
            aliases:
                - comparator_cache
        
# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
            - 'VichUploaderBundle:Form:fields.html.twig'
            - ':Form:fields.html.twig'
    globals:
        menu: "@white_october_breadcrumbs"
        app_manager: "@tbn.app_manager"
        city_manager: "@tbn.city_manager"
        site_manager: "@site_manager"
        userProfilePicture: "@tbn.profile_picture.user"
        eventProfilePicture: "@tbn.profile_picture.event"
        facebook_app_id: "%api_facebook_id%"
        twitter: "@tbn.social.twitter"
        facebook: "@tbn.social.facebook"
        google: "@tbn.social.google"
        googleMapKey: "%google_map_key%"
        app_version: "v%application_version%"
        event_seo: "@tbn.event_seo"

# Doctrine Configuration
doctrine:
    dbal:
        server_version: 5.5
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        metadata_cache_driver: apcu
        query_cache_driver: apcu
        result_cache_driver: apcu
        second_level_cache:
            enabled:      true
            log_enabled: "%kernel.debug%"

#HTTP Cache
fos_http_cache:
    tags:
        enabled: true
    proxy_client:
        varnish:
            servers:
                - 127.0.0.1:80
            base_url: "%base_host%"
        symfony:
            servers:
                - 127.0.0.1
            base_url: "%base_host%"

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    port:      "%mailer_port%"
    sender_address: "%mailer_user%"
    spool:     { type: memory }

vich_uploader:
    db_driver: orm

    mappings:
        user_image:
            uri_prefix:         /uploads/users
            upload_destination: "%kernel.root_dir%/../web/uploads/users"
            namer:              vich_uploader.namer_uniqid
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 3} # will create directory "a/b" for "abcdef.jpg"
        user_system_image:
            uri_prefix:         /uploads/users
            upload_destination: "%kernel.root_dir%/../web/uploads/users"
            namer:              vich_uploader.namer_uniqid
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 3} # will create directory "a/b" for "abcdef.jpg"
        event_image:
            uri_prefix:         /uploads/documents
            upload_destination: "%kernel.root_dir%/../web/uploads/documents"
            namer:              vich_uploader.namer_uniqid
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 3} # will create directory "a/b" for "abcdef.jpg"
        event_system_image:
            uri_prefix:         /uploads/documents
            upload_destination: "%kernel.root_dir%/../web/uploads/documents"
            namer:              vich_uploader.namer_uniqid
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 3} # will create directory "a/b" for "abcdef.jpg"

stof_doctrine_extensions:
    orm:
        default:
            sluggable: true

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main  
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "By Night"
    profile:
        form:
            type: AppBundle\Form\Type\ProfileFormType
    registration:
        form:
            type: AppBundle\Form\Type\RegistrationFormType

httplug:
    classes:
        client: Http\Adapter\Guzzle6\Client
        message_factory: Http\Message\MessageFactory\GuzzleMessageFactory
    clients:
        acme:
            factory: httplug.factory.guzzle6

ivory_google_map:
    place_search:
        client: httplug.client.default
        message_factory: httplug.message_factory.default
        format: json
        api_key: "%google_map_key%"
    place_detail:
        client: httplug.client.default
        message_factory: httplug.message_factory.default
        format: json
        api_key: "%google_map_key%"
    geocoder:
        format: json
        api_key: "%google_map_key%"
        client: httplug.client.default
        message_factory: httplug.message_factory.default

easy_admin:
    entities:
        - AppBundle\Entity\Agenda
        - AppBundle\Entity\User
        - AppBundle\Entity\Site
        - AppBundle\Entity\Place
        - AppBundle\Entity\Calendrier
        - AppBundle\Entity\Comment
        - AppBundle\Entity\Exploration
        - AppBundle\Entity\HistoriqueMaj
        - AppBundle\Entity\SiteInfo
        - AppBundle\Entity\UserInfo

hwi_oauth:
    #this is my custom user provider, created from FOSUBUserProvider - will manage the 
    #automatic user registration on your site, with data from the provider (facebook. google, etc.)
    #and also, the connecting part (get the token and the user_id)
    connect:
        account_connector: my_user_provider
        confirmation: false
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_names: [main]
    http_client:
        timeout:       10 # Time in seconds, after library will shutdown request, by default: 5
        verify_peer:   false # Setting allowing you to turn off SSL verification, by default: true
        ignore_errors: false # Setting allowing you to easier debug request errors, by default: true
        max_redirects: 1 # Number of HTTP redirection request after which library will shutdown request,
                         # by default: 5
    fosub:
        username_iterations: 30
        properties:
            # these properties will be used/redefined later in the custom FOSUBUserProvider service.
            facebook: facebook_id
            google: google_id
            twitter: twitter_id
    resource_owners:
        twitter:
            type:               twitter
            client_id:          "%twitter_app_id%"
            client_secret:      "%twitter_app_secret%"
        facebook_admin:
            type:                facebook
            client_id:           "%api_facebook_id%"
            client_secret:       "%api_facebook_secret%"
            scope:               email, publish_actions, manage_pages, publish_pages
            infos_url:           https://graph.facebook.com/me?fields=name,email,picture.type(large)
            paths:
                email:          email
                profilepicture: picture.data.url
            options:
                display: popup #dialog is optimized for popup window
        facebook_events:
            type:                facebook
            client_id:           "%api_facebook_id%"
            client_secret:       "%api_facebook_secret%"
            scope:               email, user_posts
            infos_url:           https://graph.facebook.com/me?fields=name,email,picture.type(large)
            paths:
                email:          email
                profilepicture: picture.data.url
            options:
                display: popup #dialog is optimized for popup window
        facebook_list_events:
            type:                facebook
            client_id:           "%api_facebook_id%"
            client_secret:       "%api_facebook_secret%"
            scope:               email, user_events
            infos_url:           https://graph.facebook.com/me?fields=name,email,picture.type(large)
            paths:
                email:          email
                profilepicture: picture.data.url
            options:
                display: popup #dialog is optimized for popup window
        facebook:
            type:                facebook
            client_id:           "%api_facebook_id%"
            client_secret:       "%api_facebook_secret%"
            scope:               email, rsvp_event
            authorization_url:   https://www.facebook.com/v2.8/dialog/oauth
            infos_url:           https://graph.facebook.com/me?fields=name,email,picture.type(large)
            paths:
                email:          email
                profilepicture: picture.data.url
            options:
                display: popup #dialog is optimized for popup window
        google:
            type:                google
            client_id:           "%google_app_id%"
            client_secret:       "%google_app_secret%"
            scope:               https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/plus.me https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/plus.stream.read https://www.googleapis.com/auth/plus.stream.write
            options:
                access_type:         offline
                approval_prompt:     auto
                display:             popup
                login_hint:          email address

#be_simple_i18n_routing: ~

white_october_breadcrumbs: ~

liip_imagine:
    resolvers:
        default:
            web_path: ~
    loaders:
        default:
            filesystem:
                data_root: "%data_root%"

    filter_sets:
        cache: ~
        thumb_site_large:
            quality: 75
            filters:
                thumbnail: { size: [1970, 400], mode: outbound }
                interlace:
                    # mode can be one of none,line,plane,partition
                    mode: line
        thumb_site:
            quality: 100
            filters:
                relative_resize: { heighten: 350 }
        thumbs_evenement:
            quality: 75
            filters:
                relative_resize: { heighten: 200 }
        thumb_evenement:
            quality: 100
            filters:
                relative_resize: { heighten: 250 }
        thumb_user_evenement:
            quality: 75
            filters:
                relative_resize: { heighten: 128 }
        thumb_user_large:
            quality: 75
            filters:
                relative_resize: { heighten: 200 }
        thumb_user:
            quality: 75
            filters:
                thumbnail: { size: [200, 200], mode: outbound }
        thumb_user_menu:
            quality: 75
            filters:
                thumbnail: { size: [30, 30], mode: outbound }
        thumb_user_50:
            quality: 75
            filters:
                thumbnail: { size: [50, 50], mode: outbound }
        thumb_user_115:
            quality: 75
            filters:
                thumbnail: { size: [115, 115], mode: outbound }

fos_elastica:
    clients:
        default:
            host: localhost
            port: 9200
            compression: true
    serializer:
        serializer: "jms_serializer"
    indexes:
        by-night:
            index_name: "by-night"
            client: default
            settings:
                index:
                    analysis:
                        analyzer:
                            custom_french_analyzer:
                                type: custom
                                tokenizer: nGram
                                filter: [stopwords, asciifolding, lowercase, snowball, elision, worddelimiter]
                            custom_search_analyzer:
                                type: custom
                                tokenizer: standard
                                filter: [stopwords, asciifolding, lowercase, snowball, elision, worddelimiter]
                        tokenizer:
                            nGram:
                                type:     nGram
                                min_gram: 3
                                max_gram: 20
                        filter:
                            snowball:
                                type:     snowball
                                language: French
                            elision:
                                type:     elision
                                articles: [l, m, t, qu, n, s, j, d]
                            stopwords:
                                type:      stop
                                stopwords: [_french_]
                                ignore_case : true
                            worddelimiter :
                                type:      word_delimiter
            types:
                event:
                    indexable_callback: "isIndexable"
                    properties:
                        nom: { boost: 5, type: "text", analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer  }
                        descriptif: { analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer }
                        date_debut: { type: date, format: 'yyyy-MM-dd' }
                        date_fin: { type: date, format: 'yyyy-MM-dd' }
                        place:
                            type: "object"
                            properties:
                                nom: { boost: 3, type: "text", analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer }
                                rue: { analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer }
                                ville: { boost: 2, type: "text", analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer }
                    persistence:
                        driver: orm # orm, mongodb, propel are available
                        model:  AppBundle\Entity\Agenda
                        repository: AppBundle\SearchRepository\AgendaRepository
                user:
                    properties:
                        username: { boost: 5, type: "text", analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer }
                        firstname: { boost: 1, type: "text", analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer }
                        lastname: { boost: 1, type: "text", analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer }
                    persistence:
                        driver: orm
                        model:  AppBundle\Entity\User
                        repository: AppBundle\SearchRepository\UserRepository
                city:
                    properties:
                        name: { boost: 5, type: "text", analyzer: custom_french_analyzer, search_analyzer: custom_search_analyzer }
                    persistence:
                        driver: orm
                        model:  AppBundle\Entity\City
                        repository: AppBundle\SearchRepository\CityRepository

jms_serializer:
    metadata:
        auto_detection: true
        directories:
            FOSUserBundle:
                namespace_prefix: "FOS\\UserBundle"
                path: "%kernel.root_dir%/config/serializer/fos"

presta_sitemap:
    route_annotation_listener: false

lexik_maintenance:
    authorized:
        query: { debug: 1 }
    driver:
        class: '\Lexik\Bundle\MaintenanceBundle\Drivers\FileDriver'
        options: {file_path: "%kernel.cache_dir%/lock"}

services:
    fos_user.doctrine_registry:
        alias: doctrine
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }
    twig.extension.text:
       class: Twig_Extensions_Extension_Text
       tags:
           - { name: twig.extension }

