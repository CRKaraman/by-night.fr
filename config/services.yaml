# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'
    mapping_assets: []
    application_version: '2.0.0'
    facebook_id_page: '205292952998805'
    facebook_id_app: '%env(FACEBOOK_API_ID)%'
    google_map_key: '%env(GOOGLE_MAP_KEY_WEB)%'
    twitter_id_page: 'By__Night'
    class.guzzle.response: Guzzle\Http\Message\Response
    class.guzzle.client: Guzzle\Http\Client
    class.guzzle.oauthplugin: Guzzle\Plugin\Oauth\OauthPlugin
    twitter.baseurl: https://api.twitter.com/1.1

services:
    App\Producer\EventProducer: "@old_sound_rabbit_mq.add_event_producer"
    App\Producer\UpdateFacebookIdProducer: "@old_sound_rabbit_mq.update_fb_id_producer"

    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            $changePasswordFormFactory: "@fos_user.change_password.form.factory"
            $profileFormFactory: "@fos_user.profile.form.factory"
            $memoryCache: "@memory_cache"
            $tempPath: "%kernel.project_dir%/public/uploads/temp"
            $facebookIdPage: "%facebook_id_page%"
            $twitterIdPage: "%twitter_id_page%"
            $debug: "%kernel.debug%"

    App\:
        resource: '../src/*'
        exclude: '../src/{Annotation,Entity,Exception,Kernel.php,Migrations,Geolocalize,Producer,Reject,Repository,Search}'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Request\ParamConverter\:
        resource: '../src/Request/ParamConverter'
        tags:
            - { name: request.param_converter, priority: 0 }

    App\Social\FacebookAdmin:
        arguments:
            $config: { id: "%env(FACEBOOK_API_ID)%", secret: "%env(FACEBOOK_API_SECRET)%"}

    App\Social\Twitter:
        arguments:
            $config: { id: "%env(TWITTER_API_ID)%", secret: "%env(TWITTER_API_SECRET)%"}

    App\Social\Google:
        arguments:
            $config: { id: "unused", secret: "unused"}

    App\Social\Facebook:
        arguments:
            $config: { id: "%env(FACEBOOK_API_ID)%", secret: "%env(FACEBOOK_API_SECRET)%"}

    App\Social\FacebookListEvents:
        arguments:
            $config: { id: "%env(FACEBOOK_API_ID)%", secret: "%env(FACEBOOK_API_SECRET)%"}

    App\Utils\Comparator:
        arguments:
            $cache: '@comparator_cache'

    App\Geocoder\PlaceGeocoder:
        arguments:
            $cache: '@doctrine_cache.providers.location_cache'
            $geocoder: '@app_geocoder'

    App\Archive\EventArchivator:
        arguments:
            $objectPersister: "@fos_elastica.object_persister.event.event"

    App\Command\AppEventsImportCommand:
        arguments:
            $eventProducer: '@old_sound_rabbit_mq.add_event_producer'
            $updateFacebookIdProducer: '@old_sound_rabbit_mq.update_fb_id_producer'
            $parsers:
                toulouse.opendata: '@App\Parser\Toulouse\ToulouseParser'
                toulouse.bikini: '@App\Parser\Toulouse\BikiniParser'
                facebook: '@App\Parser\Common\FaceBookParser'

    App\Importer\CountryImporter:
        arguments:
            $dataDir: "%kernel.project_dir%/var/datas"

    Monolog\Formatter\LineFormatter:
        calls:
            - [includeStacktraces]

    App\Twig\AssetExtension:
        arguments:
            $mappingAssets: "%mapping_assets%"

    App\Form\Type\ProfileFormType:
        arguments:
            $class: "%fos_user.model.user.class%"

    App\Form\Type\RegistrationFormType:
        arguments:
            $class: "%fos_user.model.user.class%"

    App\Form\Type\ReCaptchaType:
        arguments:
            $siteKey: '6LflWQoUAAAAAGDlgrKTOPxxMXwpb932_Q_tuvKX'

    #Cleaner
    App\Cleaner\ImageCleaner:
        arguments:
            $webDir: "%kernel.project_dir%/public"

    App\Validator\Constraints\EventConstraintValidator:
        tags:
            - { name: validator.constraint_validator, alias: EventContraintValidator }

    App\EventListener\ReCaptchaListener:
        arguments:
            $formName: "fos_user_registration_form"
            $field: "recaptcha"
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: "onKernelController" }

    App\Captcha\CaptchaWrapper:
        arguments:
            $secret: "%env(GOOGLE_RECAPTCHA_API_SECRET)%"

    App\Security\Core\User\FOSUBUserProvider:
        arguments:
            $properties: {facebook: facebook_id, google: google_id, twitter: twitter_id}


    #Twig extensions
    Twig\Extensions\IntlExtension:
        tags:
            - { name: twig.extension }

    Twig\Extensions\TextExtension:
        tags:
            - { name: twig.extension }
