<?php

namespace TBN\CommentBundle\Repository;

use Doctrine\ORM\EntityRepository;
use TBN\CommentBundle\Entity\Comment;
use TBN\AgendaBundle\Entity\Agenda;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{
    public function findAllByAgenda(Agenda $agenda, $page = 1, $limit = 10)
    {
        return $this->_em
            ->createQueryBuilder()
            ->select('a')
            ->from('TBNCommentBundle:Comment', 'a')
            ->where("a.agenda = :agenda AND a.parent IS NULL AND a.isApprouve = :is_approuve")
            ->setParameters([":agenda" => $agenda, "is_approuve" => true])
            ->orderBy('a.dateCreation', 'DESC')
            ->setFirstResult(($page - 1) * $limit)
            ->setMaxResults($limit)
            ->getQuery()
            ->execute();
    }

    public function findAllReponses(Comment $comment, $page = 1, $limit = 10)
    {
        return $this->_em
            ->createQueryBuilder()
            ->select('a')
            ->from('TBNCommentBundle:Comment', 'a')
            ->where("a.parent = :parent AND a.isApprouve = :is_approuve")
            ->setParameters([":parent" => $comment, "is_approuve" => true])
            ->orderBy('a.dateCreation', 'DESC')
            ->setFirstResult(($page - 1) * $limit)
            ->setMaxResults($limit)
            ->getQuery()
            ->execute();
    }

    public function findNBCommentaires(Agenda $agenda)
    {
        return $this->_em->createQueryBuilder()
            ->select('COUNT(a)')
            ->from('TBNCommentBundle:Comment', 'a')
            ->where("a.agenda = :agenda AND a.parent IS NULL AND a.isApprouve = :is_approuve")
            ->setParameters([":agenda" => $agenda, "is_approuve" => true])
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function findNBReponses(Comment $parent)
    {
        return $this->_em->createQueryBuilder()
            ->select('COUNT(a)')
            ->from('TBNCommentBundle:Comment', 'a')
            ->where("a.parent = :parent AND a.isApprouve = :is_approuve")
            ->setParameters([":parent" => $parent, "is_approuve" => true])
            ->getQuery()
            ->getSingleScalarResult();
    }
}
