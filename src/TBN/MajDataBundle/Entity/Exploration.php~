<?php

namespace TBN\MajDataBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use TBN\MajDataBundle\Reject\Reject;

/**
 * Exploration
 *
 * @ORM\Table(name="Exploration", indexes={
 *      @ORM\Index(name="exploration_facebook_id_site_idx", columns={"facebook_id"})
 * })
 * @ORM\Entity
 * @ORM\Entity(repositoryClass="TBN\MajDataBundle\Repository\ExplorationRepository")
 */
class Exploration
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string
     *
     * @ORM\Column(name="facebook_id", type="string", length=255)
     */
    private $facebookId;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="last_updated", type="datetime", nullable=true)
     */
    private $lastUpdated;

    /**
     * @var boolean
     *
     * @ORM\Column(name="reason", type="integer", nullable=false)
     */
    private $reason;

    /**
     * @var string
     *
     * @ORM\Column(name="firewall_version", type="string", length=7)
     */
    private $firewallVersion;

    /**
     * @var Reject
     */
    private $reject;

    public function setReject(Reject $reject) {
        $this->reject = $reject;

        return $this;
    }

    public function getReject() {
        return $this->reject;
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set facebookId
     *
     * @param string $facebookId
     *
     * @return Exploration
     */
    public function setFacebookId($facebookId)
    {
        $this->facebookId = $facebookId;

        return $this;
    }

    /**
     * Get facebookId
     *
     * @return string
     */
    public function getFacebookId()
    {
        return $this->facebookId;
    }

    /**
     * Set lastUpdated
     *
     * @param \DateTime $lastUpdated
     *
     * @return Exploration
     */
    public function setLastUpdated($lastUpdated = null)
    {
        $this->lastUpdated = $lastUpdated;

        return $this;
    }

    /**
     * Get lastUpdated
     *
     * @return \DateTime
     */
    public function getLastUpdated()
    {
        return $this->lastUpdated;
    }

    /**
     * Set reason
     *
     * @param integer $reason
     *
     * @return Exploration
     */
    public function setReason($reason)
    {
        $this->reason = $reason;

        return $this;
    }

    /**
     * Get reason
     *
     * @return integer
     */
    public function getReason()
    {
        return $this->reason;
    }
}
