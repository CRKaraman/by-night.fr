<?php

namespace TBN\UserBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use FOS\UserBundle\Model\User as BaseUser;

/**
 * User
 * 
 * @ORM\Table( name="tbn_user",
 *             indexes={@ORM\Index(
 *                  name="recherche_user_idx",
 *                  columns={"nom", "date_creation"}
 * )})
 * @ORM\Entity(repositoryClass="TBN\UserBundle\Entity\UserRepository")
 */
class User extends BaseUser
{
     /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string
     *
     * @ORM\Column(name="nom", type="string", length=255, nullable=true)
     */
    protected $nom;
    
    /**
     * @var string
     *
     * @ORM\Column(name="firstname", type="string", length=255, nullable=true)
     */
    protected $firstname;
 
    /**
     * @var string
     *
     * @ORM\Column(name="lastname", type="string", length=255, nullable=true)
     */
    protected $lastname;
    
    /**
     * @var string
     *
     * @ORM\Column(name="description", type="string", length=127, nullable=true)
     */
    protected $description;
    
    
    
    /**
    * @ORM\OneToMany(targetEntity="TBN\AgendaBundle\Entity\Agenda", mappedBy="user")
    * @ORM\OrderBy({"dateModification" = "DESC"})
    */  

    protected $evenements;
 
    /**
     * @ORM\OneToOne(targetEntity="TBN\UserBundle\Entity\UserInfo", cascade={"persist", "remove"})
     * @ORM\JoinColumn(nullable=true)
     */
    protected $info;
    
    /**
    * @ORM\OneToMany(targetEntity="TBN\AgendaBundle\Entity\Calendrier", mappedBy="agenda")
    */
    protected $calendriers;
    
    /**
    * @ORM\ManyToOne(targetEntity="TBN\MainBundle\Entity\Site")
    * @ORM\JoinColumn(nullable=false)
    */
    protected $site;
    
    /**
     * @ORM\Column(name="from_login", type="boolean", nullable=true)
     */
    protected $from_login;
    
    /**
     * @ORM\Column(name="date_creation", type="datetime", nullable=true)
     */
    protected $date_creation;

    /**
     * Constructor
     */
    public function __construct()
    {
        parent::__construct();
        
        $this->setFromLogin(false);
        $this->date_creation = new \DateTime();
        $this->evenements = new \Doctrine\Common\Collections\ArrayCollection();
        $this->calendriers = new \Doctrine\Common\Collections\ArrayCollection();
        $this->info = new UserInfo();
    }
    
      
    public function getProfileDefault()
    {
        $info = $this->info;

        if($info !== null)
        {
            if($info->getFacebookProfilePicture() != null)
            {
                return $info->getFacebookProfilePicture();
            }elseif($info->getTwitterProfilePicture() != null)
            {
                return $info->getTwitterProfilePicture();
            }elseif($info->getGoogleProfilePicture() != null)
            {
                return $info->getGoogleProfilePicture();
            }
        }
        
        return "http://placehold.it/250&text=".$this->getUsername();
    }
    
    public function getUsername() {
        return ucfirst(parent::getUsername());
    }

    
}
