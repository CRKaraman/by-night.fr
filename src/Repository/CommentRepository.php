<?php

namespace App\Repository;

use App\Entity\Comment;
use App\Entity\Event;
use App\Entity\User;
use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{
    public function findAllByEvent(Event $event, $page = 1, $limit = 10)
    {
        return $this->_em
            ->createQueryBuilder()
            ->select('a')
            ->from('App:Comment', 'a')
            ->where('a.event = :event AND a.parent IS NULL AND a.isApprouve = :is_approuve')
            ->setParameters([':event' => $event, 'is_approuve' => true])
            ->orderBy('a.dateCreation', 'DESC')
            ->setFirstResult(($page - 1) * $limit)
            ->setMaxResults($limit)
            ->getQuery()
            ->execute();
    }

    public function findAllByUser(User $user)
    {
        return $this->_em
            ->createQueryBuilder()
            ->select('c')
            ->from('App:Comment', 'c')
            ->where('c.user = :user')
            ->setParameters([':user' => $user->getId()])
            ->getQuery()
            ->execute();
    }

    public function findAllReponses(Comment $comment, $page = 1, $limit = 10)
    {
        return $this->_em
            ->createQueryBuilder()
            ->select('a')
            ->from('App:Comment', 'a')
            ->where('a.parent = :parent AND a.isApprouve = :is_approuve')
            ->setParameters([':parent' => $comment, 'is_approuve' => true])
            ->orderBy('a.dateCreation', 'DESC')
            ->setFirstResult(($page - 1) * $limit)
            ->setMaxResults($limit)
            ->getQuery()
            ->execute();
    }

    public function findNBCommentaires(Event $event)
    {
        return $this->_em->createQueryBuilder()
            ->select('COUNT(a)')
            ->from('App:Comment', 'a')
            ->where('a.event = :event AND a.parent IS NULL AND a.isApprouve = :is_approuve')
            ->setParameters([':event' => $event, 'is_approuve' => true])
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function findNBReponses(Comment $parent)
    {
        return $this->_em->createQueryBuilder()
            ->select('COUNT(a)')
            ->from('App:Comment', 'a')
            ->where('a.parent = :parent AND a.isApprouve = :is_approuve')
            ->setParameters([':parent' => $parent, 'is_approuve' => true])
            ->getQuery()
            ->getSingleScalarResult();
    }
}
