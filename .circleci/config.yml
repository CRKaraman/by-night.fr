version: 2

references:
    working_directory: &working_directory
        working_directory: ~/app

    attach_workspace: &attach_workspace
        attach_workspace:
            at: ~/app

    configure_base: &configure_base
        machine:
            image: ubuntu-1604:201903-01
            docker_layer_caching: true

    generate_docker_hashes: &generate_docker_hashes
        run: |
            echo 'export APP_DOCKER_IMAGE_NAME=guystlr/by-night' >> $BASH_ENV
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                IMAGE_TAG=dev
            else
                IMAGE_TAG=$CIRCLE_TAG
            fi
            echo "export APP_DOCKER_IMAGE_TAG=$IMAGE_TAG" >> $BASH_ENV

    authenticate_on_registry: &authenticate_on_registry
        run: |
            set -x
            echo ${DOCKER_PWD} | docker login -u ${DOCKER_LOGIN} --password-stdin

jobs:
    build:
        <<: *working_directory
        <<: *configure_base
        steps:
            - checkout
            - restore_cache:
                key: composer-{{ checksum "composer.lock" }}
            - restore_cache:
                key: npm-{{ checksum "yarn.lock" }}
            - *generate_docker_hashes
            - *authenticate_on_registry

            - run:
                  name: "Build and push Docker image"
                  command: |
                      docker build -t ${IMAGE_NAME}:${IMAGE_TAG} --build-arg APP_VERSION=${APP_DOCKER_IMAGE_TAG} .
                      if [ "${CIRCLE_TAG}" != "" ]; then
                          docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
                      fi
                      docker push ${IMAGE_NAME}
            - save_cache:
                paths:
                    - ./vendor
                key: composer-{{ checksum "composer.lock" }}
            - save_cache:
                paths:
                    - ./node_modules
                key: npm-{{ checksum "yarn.lock" }}

            - persist_to_workspace:
                root: ./
                paths:
                    - ./
    deploy:
        <<: *working_directory
        machine:
            enabled: true
        steps:
            - add_ssh_keys:
                  fingerprints:
                      - "51:2c:bf:10:3d:c0:16:08:6f:23:ae:79:8e:cb:82:9b"
            - *generate_docker_hashes
            - run:
                  name: "Deploy image to production"
                  command: |
                      ssh guillaume@${PRODUCTION_SERVER_IP} "cd ${PRODUCTION_SERVER_PATH} && sudo /bin/bash ./deploy.sh ${IMAGE_NAME}:latest"

workflows:
    version: 2
    test_deploy:
        jobs:
            - build

    prod_deploy:
        jobs:
            - build:
                  filters:
                      branches:
                          ignore: /.*/
                      tags:
                          only: /^v[0-9]+(\.[0-9]+)*$/
            - deploy:
                  requires:
                      - build
                  filters:
                      tags:
                          only: /^v[0-9]+(\.[0-9]+)*$/
